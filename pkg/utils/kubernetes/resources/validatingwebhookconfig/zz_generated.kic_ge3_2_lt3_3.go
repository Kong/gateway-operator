// This file is generated by /hack/generators/kic/webhook-config-generator. DO NOT EDIT.

package validatingwebhookconfig

import (
	"github.com/samber/lo"
	admregv1 "k8s.io/api/admissionregistration/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// GenerateValidatingWebhookConfigurationForKIC_ge3_2_lt3_3 generates a ValidatingWebhookConfiguration for KIC >=3.2, <3.3.
func GenerateValidatingWebhookConfigurationForKIC_ge3_2_lt3_3(name string, clientConfig admregv1.WebhookClientConfig) *admregv1.ValidatingWebhookConfiguration {
	return &admregv1.ValidatingWebhookConfiguration{
		ObjectMeta: metav1.ObjectMeta{
			Name: name,
		},
		Webhooks: []admregv1.ValidatingWebhook{
			{
				Name: "secrets.credentials.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"secrets",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "secrets.plugins.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"secrets",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "httproutes.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"gateway.networking.k8s.io",
							},
							APIVersions: []string{
								"v1",
								"v1beta1",
							},
							Resources: []string{
								"httproutes",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "ingresses.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"networking.k8s.io",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"ingresses",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongclusterplugins.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"kongclusterplugins",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongconsumergroups.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1beta1",
							},
							Resources: []string{
								"kongconsumergroups",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongconsumers.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"kongconsumers",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongcustomentities.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1alpha1",
							},
							Resources: []string{
								"kongcustomentities",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongingresses.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"kongingresses",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongplugins.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"kongplugins",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "kongvaults.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"configuration.konghq.com",
							},
							APIVersions: []string{
								"v1alpha1",
							},
							Resources: []string{
								"kongvaults",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
			{
				Name: "services.validation.ingress-controller.konghq.com",
				ClientConfig: clientConfig,
				// We're using 'Ignore' failure policy to avoid issues with modifying resources when webhook-backing
				// Deployments (ControlPlane and DataPlane) are not available.
				// See https://github.com/Kong/gateway-operator/issues/1564 for more details.
				FailurePolicy: lo.ToPtr(admregv1.Ignore),
				MatchPolicy: lo.ToPtr(admregv1.MatchPolicyType("Equivalent")),
				SideEffects:   lo.ToPtr(admregv1.SideEffectClass("None")),
				AdmissionReviewVersions: []string{
					"v1",
				},
				Rules: []admregv1.RuleWithOperations{
					{
						Rule: admregv1.Rule{
							APIGroups: []string{
								"",
							},
							APIVersions: []string{
								"v1",
							},
							Resources: []string{
								"services",
							},
						},
						Operations: []admregv1.OperationType{
							"CREATE",
							"UPDATE",
						},
					},
				},
			},
		},
	}
}
