# Ensure that you create a secret containing your cluster certificate before applying this
# kubectl create secret tls konnect-client-tls -n kong --cert=./tls.crt --key=./tls.key
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: konnect-client-tls
# type: kubernetes.io/tls
# stringData:
#   tls.crt: |
#     -----BEGIN CERTIFICATE-----
#     MIIDhDCCAm6gAwIBAgIBATALBgkqhkiG9w0BAQ0wLDEqMAkGA1UEBhMCVVMwHQYD...
#     zy5lW2IG5AjNDV8VBCthVj5j1UENTVi4rLhu8j/kfb9gNhvqaN8UcA==
#     -----END CERTIFICATE-----
#   tls.key: |
#     -----BEGIN PRIVATE KEY-----
#     MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQChCERwsegdWSnS...
#     WSK9kndNKpFI4vPvuw6j2JJl
#     -----END PRIVATE KEY-----
# ---
apiVersion: gateway-operator.konghq.com/v1alpha1
kind: DataPlaneKonnectExtension
metadata:
  name: my-konnect-config
spec:
  controlPlaneRef:
    type: konnectID
    konnectID: <YOUR-CP-KONNECT-ID>
  serverHostname: your.konnect.server
  controlPlaneRegion: eu
  clusterCertificateSecretName: konnect-client-tls
---
apiVersion: gateway-operator.konghq.com/v1beta1
kind: DataPlane
metadata:
  name: konnect-extension-example
spec:
  extensions:
  - kind: DataPlaneKonnectExtension
    name: my-konnect-config
    group: gateway-operator.konghq.com
  deployment:
    replicas: 3
    podTemplateSpec:
      metadata:
        labels:
          dataplane-pod-label: example
        annotations:
          dataplane-pod-annotation: example
      spec:
        containers:
        - name: proxy
          # renovate: datasource=docker versioning=docker
          image: kong/kong-gateway:3.7
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 1
